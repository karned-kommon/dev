name: karned

services:
  # Initialization service
  init:
    container_name: karned-init
    build:
      context: .
      dockerfile: Dockerfile.init
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
      - .init_data:/app/flags
    networks:
      - karned-network
    depends_on:
      - mongodb
      - redis
      - keycloak
      - vault

  # Databases
  mongodb:
    container_name: karned-mongodb
    image: mongo:8
    ports:
      - "5971:27017"
    volumes:
      - .mongo_data:/data/db
    networks:
      - karned-network

  redis:
    container_name: karned-redis
    image: redis:latest
    ports:
      - "5972:6379"
    volumes:
      - .redis_data:/data
    networks:
      - karned-network

  mariadb:
    container_name: karned-mariadb
    image: mariadb:latest
    ports:
      - "5973:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=karned
    volumes:
      - .mariadb_data:/var/lib/mysql
    networks:
      - karned-network

  postgres:
    container_name: karned-postgres
    image: postgres:latest
    ports:
      - "5974:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=karned
    volumes:
      - .postgres_data:/var/lib/postgresql/data
    networks:
      - karned-network

  neo4j:
    container_name: karned-neo4j
    image: neo4j:latest
    ports:
      - "5975:7474"
      - "5976:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - .neo4j_data:/data
    networks:
      - karned-network

  couchdb:
    container_name: karned-couchdb
    image: couchdb:latest
    ports:
      - "5977:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    volumes:
      - .couchdb_data:/opt/couchdb/data
    networks:
      - karned-network

  # Services
  keycloak:
    container_name: karned-keycloak
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "5990:8080"
    volumes:
      - .keycloak_data:/opt/keycloak/data
    networks:
      - karned-network

  vault:
    container_name: karned-vault
    image: hashicorp/vault:latest
    ports:
      - "5991:8200"
    command: ["vault", "server", "-config=/vault/config/vault.hcl"]
    cap_add:
      - IPC_LOCK
    volumes:
      - .vault_data:/vault/data
      - ./config/vault.hcl:/vault/config/vault.hcl:ro
    networks:
      - karned-network

  vault-unseal:
    container_name: karned-vault-unseal
    build:
      context: .
      dockerfile: Dockerfile.vault-unseal
    environment:
      - CHECK_INTERVAL=5
    volumes:
      - .vault_data:/shared:ro
    networks:
      - karned-network
    depends_on:
      - vault
    restart: unless-stopped

  grafana:
    container_name: karned-grafana
    image: grafana/grafana:latest
    ports:
      - "5992:3000"
    volumes:
      - .grafana_data:/var/lib/grafana
    networks:
      - karned-network

  prometheus:
    container_name: karned-prometheus
    image: prom/prometheus:latest
    ports:
      - "5993:9090"
    volumes:
      - .prometheus_data:/prometheus
    networks:
      - karned-network

  minio:
    container_name: karned-minio
    image: minio/minio:latest
    ports:
      - "5994:9000"
      - "5995:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - .minio_data:/data
    networks:
      - karned-network

  kafka:
    image: bitnami/kafka:latest
    container_name: karned-kafka
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://karned-kafka:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@karned-kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=TRACE,kafka.request.logger=DEBUG"
      KAFKA_CFG_LOG_LEVEL: DEBUG
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_ENABLE_KRAFT: 'yes'
      KAFKA_KRAFT_CLUSTER_ID: '5L6g3nShT-eMCtK--X86sw'
    ports:
      - "5996:9092"
    networks:
      - karned-network
    restart: unless-stopped
    volumes:
      - ./.kafka_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: karned-kafka-ui
    ports:
      - "5997:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - karned-network
    restart: unless-stopped

  elasticsearch:
    container_name: karned-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    ports:
      - "5998:9200"
      - "5999:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - .elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - karned-network

  api-gateway-service:
    container_name: karned-api-gateway
    image: killiankopp/api-gateway:0.1.1
    ports:
      - "9000:80"
    environment:
      - ALLOWED_ORIGINS=http://localhost:3000|http://localhost:8000|http://localhost:8087
    depends_on:
      - api-license-service
      - api-auth-service
      - api-credential-service
      - api-recipe-service
    networks:
      - karned-network

  api-auth-service:
    container_name: karned-api-auth
    image: killiankopp/api-auth:1.1.0
    ports:
      - "9001:8000"
    environment:
      - API_NAME=api-auth
      - API_TAG_NAME=auth
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - DB_HOST=karned-mongodb
      - DB_PORT=27017
      - DB_USER=
      - DB_PASSWORD=
      - DB_DATABASE=karned
      - DB_COLLECTION=licenses
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

  api-credential-service:
    container_name: karned-api-credential
    image: killiankopp/api-credential:1.0.1
    ports:
      - "9002:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - DB_HOST=
      - DB_PORT=
      - DB_USER=
      - DB_PASSWORD=
      - DB_DATABASE=
      - DB_COLLECTION=credentials
      - URL_API_GATEWAY=http://api-gateway-service
      - VAULT_HOST=http://karned-vault
      - VAULT_PORT=8200
      - VAULT_TOKEN=root
      - VAULT_SECRET_PATH=secret
    networks:
      - karned-network

  api-license-service:
    container_name: karned-api-license
    image: killiankopp/api-license:1.0.0
    ports:
      - "9003:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - DB_HOST=karned-mongodb
      - DB_PORT=27017
      - DB_USER=
      - DB_PASSWORD=
      - DB_DATABASE=karned
      - DB_COLLECTION=license
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

  api-storage-service:
    container_name: karned-api-storage
    image: killiankopp/api-storage:1.0.0
    ports:
      - "9004:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - DB_HOST=karned-mongodb
      - DB_PORT=27017
      - DB_USER=
      - DB_PASSWORD=
      - DB_DATABASE=karned
      - DB_COLLECTION=storage
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

  api-recipe-service:
    container_name: karned-api-recipe
    image: killiankopp/api-recipe:1.1.1
    ports:
      - "9005:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

  api-detection-service:
    container_name: karned-api-detection
    image: killiankopp/api-detection:1.0.0
    ports:
      - "9006:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

  ms-detection-service:
    container_name: karned-ms-detection
    image: killiankopp/ms-detection:1.0.0
    ports:
      - "9007:8000"
    environment:
      - MS_NAME=ms-detection
      - KAFKA_HOST=karned-kafka
      - KAFKA_PORT=9092
      - KAFKA_TOPIC=detections
      - KAFKA_TOPIC_DLQ=detections-dl
      - KAFKA_GROUP_ID=detections
      - KAFKA_OFFSET_RESET=earliest
      - LOG_LEVEL=info
    networks:
      - karned-network

  api-home-service:
    container_name: karned-api-home
    image: killiankopp/api-home:1.0.0
    ports:
      - "9008:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - URL_API_GATEWAY=http://api-gateway-service

  api-person-service:
    container_name: karned-api-person
    image: killiankopp/api-person:1.0.0
    ports:
      - "9009:8000"
    environment:
      - KEYCLOAK_HOST=http://karned-keycloak:8080
      - KEYCLOAK_REALM=karned
      - KEYCLOAK_CLIENT_ID=karned
      - KEYCLOAK_CLIENT_SECRET=secret
      - REDIS_HOST=karned-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - URL_API_GATEWAY=http://api-gateway-service
    networks:
      - karned-network

networks:
  karned-network:
    external: true

volumes:
  .init_data:
  .mongo_data:
  .redis_data:
  .mariadb_data:
  .postgres_data:
  .neo4j_data:
  .couchdb_data:
  .keycloak_data:
  .vault_data:
  .grafana_data:
  .prometheus_data:
  .minio_data:
  .kafka_data:
